{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\athar\\\\Desktop\\\\as\\\\src\\\\context\\\\AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nexport const useAppContext = () => {\n  _s();\n  return useContext(AppContext);\n};\n_s(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AppProvider = ({\n  children\n}) => {\n  _s2();\n  const [showLogin, setShowLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n  const [user, setUser] = useState(null);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  // Mock login function - replace with actual authentication logic\n  const login = credentials => {\n    // In a real app, you would make an API call here\n    console.log('Login with:', credentials);\n    setUser({\n      id: '1',\n      name: 'John Doe',\n      email: credentials.email,\n      role: 'patient' // or 'doctor', 'admin'\n    });\n    setShowLogin(false);\n  };\n\n  // Mock register function\n  const register = userData => {\n    // In a real app, you would make an API call here\n    console.log('Register with:', userData);\n    setUser({\n      id: '1',\n      name: userData.name,\n      email: userData.email,\n      role: 'patient'\n    });\n    setShowRegister(false);\n  };\n\n  // Logout function\n  const logout = () => {\n    setUser(null);\n  };\n\n  // Toggle dark/light mode\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n    // You might want to save this preference to localStorage\n    localStorage.setItem('darkMode', !isDarkMode);\n  };\n  const value = {\n    showLogin,\n    setShowLogin,\n    showRegister,\n    setShowRegister,\n    user,\n    setUser,\n    login,\n    register,\n    logout,\n    isDarkMode,\n    toggleDarkMode\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n};\n_s2(AppProvider, \"vih95GfnMW1Ymp+qMYJ/yRxvqU0=\");\n_c = AppProvider;\nexport default AppContext;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","AppContext","useAppContext","_s","AppProvider","children","_s2","showLogin","setShowLogin","showRegister","setShowRegister","user","setUser","isDarkMode","setIsDarkMode","login","credentials","console","log","id","name","email","role","register","userData","logout","toggleDarkMode","localStorage","setItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/athar/Desktop/as/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\nconst AppContext = createContext();\n\nexport const useAppContext = () => {\n  return useContext(AppContext);\n};\n\nexport const AppProvider = ({ children }) => {\n  const [showLogin, setShowLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n  const [user, setUser] = useState(null);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  // Mock login function - replace with actual authentication logic\n  const login = (credentials) => {\n    // In a real app, you would make an API call here\n    console.log('Login with:', credentials);\n    setUser({\n      id: '1',\n      name: 'John Doe',\n      email: credentials.email,\n      role: 'patient', // or 'doctor', 'admin'\n    });\n    setShowLogin(false);\n  };\n\n  // Mock register function\n  const register = (userData) => {\n    // In a real app, you would make an API call here\n    console.log('Register with:', userData);\n    setUser({\n      id: '1',\n      name: userData.name,\n      email: userData.email,\n      role: 'patient',\n    });\n    setShowRegister(false);\n  };\n\n  // Logout function\n  const logout = () => {\n    setUser(null);\n  };\n\n  // Toggle dark/light mode\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n    // You might want to save this preference to localStorage\n    localStorage.setItem('darkMode', !isDarkMode);\n  };\n\n  const value = {\n    showLogin,\n    setShowLogin,\n    showRegister,\n    setShowRegister,\n    user,\n    setUser,\n    login,\n    register,\n    logout,\n    isDarkMode,\n    toggleDarkMode,\n  };\n\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\n};\n\nexport default AppContext;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,UAAU,gBAAGL,aAAa,CAAC,CAAC;AAElC,OAAO,MAAMM,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,OAAOL,UAAU,CAACG,UAAU,CAAC;AAC/B,CAAC;AAACE,EAAA,CAFWD,aAAa;AAI1B,OAAO,MAAME,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC3C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMkB,KAAK,GAAIC,WAAW,IAAK;IAC7B;IACAC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,WAAW,CAAC;IACvCJ,OAAO,CAAC;MACNO,EAAE,EAAE,GAAG;MACPC,IAAI,EAAE,UAAU;MAChBC,KAAK,EAAEL,WAAW,CAACK,KAAK;MACxBC,IAAI,EAAE,SAAS,CAAE;IACnB,CAAC,CAAC;IACFd,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;;EAED;EACA,MAAMe,QAAQ,GAAIC,QAAQ,IAAK;IAC7B;IACAP,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEM,QAAQ,CAAC;IACvCZ,OAAO,CAAC;MACNO,EAAE,EAAE,GAAG;MACPC,IAAI,EAAEI,QAAQ,CAACJ,IAAI;MACnBC,KAAK,EAAEG,QAAQ,CAACH,KAAK;MACrBC,IAAI,EAAE;IACR,CAAC,CAAC;IACFZ,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;;EAED;EACA,MAAMe,MAAM,GAAGA,CAAA,KAAM;IACnBb,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;;EAED;EACA,MAAMc,cAAc,GAAGA,CAAA,KAAM;IAC3BZ,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1B;IACAc,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,CAACf,UAAU,CAAC;EAC/C,CAAC;EAED,MAAMgB,KAAK,GAAG;IACZtB,SAAS;IACTC,YAAY;IACZC,YAAY;IACZC,eAAe;IACfC,IAAI;IACJC,OAAO;IACPG,KAAK;IACLQ,QAAQ;IACRE,MAAM;IACNZ,UAAU;IACVa;EACF,CAAC;EAED,oBAAO1B,OAAA,CAACC,UAAU,CAAC6B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAxB,QAAA,EAAEA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAsB,CAAC;AAC5E,CAAC;AAAC5B,GAAA,CA3DWF,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AA6DxB,eAAeH,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}