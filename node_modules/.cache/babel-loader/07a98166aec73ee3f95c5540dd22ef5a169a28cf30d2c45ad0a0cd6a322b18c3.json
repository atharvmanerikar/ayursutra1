{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\athar\\\\Desktop\\\\as\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport Header from './components/Header';\nimport HomePage from './pages/HomePage';\nimport PatientDashboard from './pages/PatientDashboard';\nimport DoctorDashboard from './pages/DoctorDashboard';\nimport AdminDashboard from './pages/AdminDashboard';\nimport { lightTheme, darkTheme } from './styles/theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    line-height: 1.6;\n    color: ${props => props.theme.colors.textPrimary};\n    background: ${props => props.theme.colors.background};\n    transition: all 0.3s ease;\n    overflow-x: hidden;\n  }\n\n  button {\n    cursor: pointer;\n    border: none;\n    outline: none;\n  }\n\n  a {\n    text-decoration: none;\n  }\n`;\n_c = GlobalStyle;\nconst AppContainer = styled.div`\n  min-height: 100vh;\n  position: relative;\n`;\n_c2 = AppContainer;\nfunction App() {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      setIsDarkMode(savedTheme === 'dark');\n    }\n  }, []);\n  const toggleTheme = () => {\n    const newTheme = !isDarkMode;\n    setIsDarkMode(newTheme);\n    localStorage.setItem('theme', newTheme ? 'dark' : 'light');\n  };\n  const handleLogin = userData => {\n    setUser(userData);\n    // redirect to respective dashboard\n    if ((userData === null || userData === void 0 ? void 0 : userData.userType) === 'patient') {\n      navigate('/patient-dashboard');\n    } else if ((userData === null || userData === void 0 ? void 0 : userData.userType) === 'doctor') {\n      navigate('/doctor-dashboard');\n    } else if ((userData === null || userData === void 0 ? void 0 : userData.userType) === 'admin') {\n      navigate('/admin-dashboard');\n    } else {\n      navigate('/');\n    }\n  };\n  const handleLogout = () => {\n    setUser(null);\n  };\n  const theme = isDarkMode ? darkTheme : lightTheme;\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        user: user,\n        onLogin: handleLogin,\n        onLogout: handleLogout,\n        toggleTheme: toggleTheme,\n        isDarkMode: isDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/patient-dashboard\",\n          element: user && user.userType === 'patient' ? /*#__PURE__*/_jsxDEV(PatientDashboard, {\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/doctor-dashboard\",\n          element: user && user.userType === 'doctor' ? /*#__PURE__*/_jsxDEV(DoctorDashboard, {\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin-dashboard\",\n          element: user && user.userType === 'admin' ? /*#__PURE__*/_jsxDEV(AdminDashboard, {\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"U3WBK0ICXe+YfAUJdDJaWH6NC2U=\", false, function () {\n  return [useNavigate];\n});\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"AppContainer\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","Navigate","useNavigate","styled","ThemeProvider","createGlobalStyle","Header","HomePage","PatientDashboard","DoctorDashboard","AdminDashboard","lightTheme","darkTheme","jsxDEV","_jsxDEV","GlobalStyle","props","theme","colors","textPrimary","background","_c","AppContainer","div","_c2","App","_s","isDarkMode","setIsDarkMode","user","setUser","navigate","savedTheme","localStorage","getItem","toggleTheme","newTheme","setItem","handleLogin","userData","userType","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onLogout","path","element","to","_c3","$RefreshReg$"],"sources":["C:/Users/athar/Desktop/as/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport Header from './components/Header';\nimport HomePage from './pages/HomePage';\nimport PatientDashboard from './pages/PatientDashboard';\nimport DoctorDashboard from './pages/DoctorDashboard';\nimport AdminDashboard from './pages/AdminDashboard';\nimport { lightTheme, darkTheme } from './styles/theme';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    line-height: 1.6;\n    color: ${props => props.theme.colors.textPrimary};\n    background: ${props => props.theme.colors.background};\n    transition: all 0.3s ease;\n    overflow-x: hidden;\n  }\n\n  button {\n    cursor: pointer;\n    border: none;\n    outline: none;\n  }\n\n  a {\n    text-decoration: none;\n  }\n`;\n\nconst AppContainer = styled.div`\n  min-height: 100vh;\n  position: relative;\n`;\n\nfunction App() {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      setIsDarkMode(savedTheme === 'dark');\n    }\n  }, []);\n\n  const toggleTheme = () => {\n    const newTheme = !isDarkMode;\n    setIsDarkMode(newTheme);\n    localStorage.setItem('theme', newTheme ? 'dark' : 'light');\n  };\n\n  const handleLogin = (userData) => {\n    setUser(userData);\n    // redirect to respective dashboard\n    if (userData?.userType === 'patient') {\n      navigate('/patient-dashboard');\n    } else if (userData?.userType === 'doctor') {\n      navigate('/doctor-dashboard');\n    } else if (userData?.userType === 'admin') {\n      navigate('/admin-dashboard');\n    } else {\n      navigate('/');\n    }\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n  };\n\n  const theme = isDarkMode ? darkTheme : lightTheme;\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <AppContainer>\n        <Header \n          user={user} \n          onLogin={handleLogin} \n          onLogout={handleLogout}\n          toggleTheme={toggleTheme}\n          isDarkMode={isDarkMode}\n        />\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route \n            path=\"/patient-dashboard\" \n            element={\n              user && user.userType === 'patient' ? \n              <PatientDashboard user={user} /> : \n              <Navigate to=\"/\" />\n            } \n          />\n          <Route \n            path=\"/doctor-dashboard\" \n            element={\n              user && user.userType === 'doctor' ? \n              <DoctorDashboard user={user} /> : \n              <Navigate to=\"/\" />\n            } \n          />\n          <Route \n            path=\"/admin-dashboard\" \n            element={\n              user && user.userType === 'admin' ? \n              <AdminDashboard user={user} /> : \n              <Navigate to=\"/\" />\n            } \n          />\n        </Routes>\n      </AppContainer>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}