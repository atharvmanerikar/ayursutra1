{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\athar\\\\Desktop\\\\as\\\\src\\\\components\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAppContext } from '../context/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedRoles\n}) => {\n  _s();\n  const {\n    user\n  } = useAppContext();\n\n  // If no user is logged in, redirect to home\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If the user's role is not in the allowed roles, redirect to their dashboard\n  if (allowedRoles && !allowedRoles.includes(user.role)) {\n    // Redirect to the user's dashboard based on their role\n    const redirectPath = `/${user.role}-dashboard`;\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: redirectPath,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If user is authenticated and has the right role, render the component\n  return children;\n};\n_s(ProtectedRoute, \"uOyW5bJGTeqMKNlIPHi/qjwTemc=\", false, function () {\n  return [useAppContext];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useAppContext","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","_s","user","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","includes","role","redirectPath","_c","$RefreshReg$"],"sources":["C:/Users/athar/Desktop/as/src/components/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAppContext } from '../context/AppContext';\n\nconst ProtectedRoute = ({ children, allowedRoles }) => {\n  const { user } = useAppContext();\n\n  // If no user is logged in, redirect to home\n  if (!user) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  // If the user's role is not in the allowed roles, redirect to their dashboard\n  if (allowedRoles && !allowedRoles.includes(user.role)) {\n    // Redirect to the user's dashboard based on their role\n    const redirectPath = `/${user.role}-dashboard`;\n    return <Navigate to={redirectPath} replace />;\n  }\n\n  // If user is authenticated and has the right role, render the component\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,aAAa,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM;IAAEC;EAAK,CAAC,GAAGP,aAAa,CAAC,CAAC;;EAEhC;EACA,IAAI,CAACO,IAAI,EAAE;IACT,oBAAOL,OAAA,CAACH,QAAQ;MAACS,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;;EAEA;EACA,IAAIR,YAAY,IAAI,CAACA,YAAY,CAACS,QAAQ,CAACP,IAAI,CAACQ,IAAI,CAAC,EAAE;IACrD;IACA,MAAMC,YAAY,GAAG,IAAIT,IAAI,CAACQ,IAAI,YAAY;IAC9C,oBAAOb,OAAA,CAACH,QAAQ;MAACS,EAAE,EAAEQ,YAAa;MAACP,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC/C;;EAEA;EACA,OAAOT,QAAQ;AACjB,CAAC;AAACE,EAAA,CAjBIH,cAAc;EAAA,QACDH,aAAa;AAAA;AAAAiB,EAAA,GAD1Bd,cAAc;AAmBpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}